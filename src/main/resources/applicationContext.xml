<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:int="http://www.springframework.org/schema/integration"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:int-file="http://www.springframework.org/schema/integration/file"
       xmlns:int-jdbc="http://www.springframework.org/schema/integration/jdbc"
       xmlns:jdbc="http://www.springframework.org/schema/jdbc"
       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
           http://www.springframework.org/schema/integration http://www.springframework.org/schema/integration/spring-integration-5.1.xsd
           http://www.springframework.org/schema/integration/file http://www.springframework.org/schema/integration/file/spring-integration-file-5.1.xsd
           http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd
           http://www.springframework.org/schema/jdbc https://www.springframework.org/schema/jdbc/spring-jdbc.xsd
           http://www.springframework.org/schema/integration/jdbc https://www.springframework.org/schema/integration/jdbc/spring-integration-jdbc.xsd">

    <int-file:inbound-channel-adapter
            channel="InputChannel"
            directory="./dataIn"
            filename-pattern="*.txt">
        <int:poller
                id="poller"
                fixed-delay="1000"/>
    </int-file:inbound-channel-adapter>

    <int-file:splitter id="splitter"
                       apply-sequence="false"
                       charset="UTF-8"
                       first-line-as-header="true"
                       input-channel="InputChannel"
                       output-channel="AfterSplitChannel"
                       auto-startup="true"/>

    <int:transformer input-channel="AfterSplitChannel"
                     output-channel="AfterTransformationChannel"
                     expression="payload.toUpperCase()"/>

    <int:header-value-router
            input-channel="AfterTransformationChannel"
            header-name="file_name"
            resolution-required="false">
        <int:mapping value="teams.txt" channel="Team"/>
        <int:mapping value="players.txt" channel="Player"/>
    </int:header-value-router>

    <int:transformer
            input-channel="Team"
            output-channel="MergedChannel"
            ref="mapTeam"
            method="mapTeamMethod"/>

    <int:transformer
            input-channel="Player"
            output-channel="MergedChannel"
            ref="mapPlayer"
            method="mapPlayerMethod"/>

    <int:recipient-list-router
            id="customRouter"
            input-channel="MergedChannel">
        <int:recipient
                channel="H2Channel"/>
        <int:recipient
                channel="BeforeJsonConvertChannel"/>
    </int:recipient-list-router>

    <int:channel id="AfterFilterTeamChannel"/>
    <int:channel id="AfterFilterPlayerChannel"/>

    <int:header-value-router
            input-channel="H2Channel"
            header-name="file_name">
        <int:mapping
                value="teams.txt"
                channel="AfterFilterTeamChannel"/>

        <int:mapping
                value="players.txt"
                channel="AfterFilterPlayerChannel"/>
    </int:header-value-router>

    <jdbc:embedded-database id="datasource" type="H2">
        <jdbc:script location="classpath:data.sql"/>
    </jdbc:embedded-database>

    <int-jdbc:outbound-channel-adapter
            query="insert into teams (id, name) values (:payload.id, :payload.name)"
            data-source="datasource"
            channel="AfterFilterTeamChannel"/>

    <int-jdbc:outbound-channel-adapter
            query="insert into players (id, firstName, lastName, birthDate) values (:payload.id, :payload.firstName, :payload.lastName, :payload.birthDate)"
            data-source="datasource"
            channel="AfterFilterPlayerChannel"/>

    <int:channel id="AfterAggregationChannel"/>

    <int:aggregator id="myAggregator"
                    input-channel="BeforeJsonConvertChannel"
                    output-channel="AfterAggregationChannel"
                    correlation-strategy-expression="headers.file_originalFile"
                    release-strategy-expression="size()==5">
    </int:aggregator>

    <int:channel id="JsonOuput"/>
    <int:object-to-json-transformer
            input-channel="AfterAggregationChannel"
            output-channel="JsonOuput"/>

    <int-file:outbound-channel-adapter
            channel="JsonOuput"
            filename-generator="fileNameFactory"
            directory="./dataOut" append-new-line="true"/>

    <context:component-scan base-package="arradibouchakour.application"/>

</beans>